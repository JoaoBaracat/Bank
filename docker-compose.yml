version: '3.4'

networks:
  app-tier:
    driver: bridge

services:
  rabbitmq:
    container_name: Bank.RabbitMQ
    image: rabbitmq:3-management
    hostname: rabbitmq 
    networks:
      - app-tier
    ports:
      - '4369:4369'
      - '5672:5672'
      - '25672:25672'
      - '15672:15672'
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    volumes:
      - 'rabbitmq_data:/var/lib/rabbitmq/'
      - 'rabbitmq_data:/etc/rabbitmq/'
      - 'rabbitmq_data:/var/log/rabbitmq/'
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 20s
      retries: 5
      
  bank.api:
    container_name: Bank.Api
    image: ${DOCKER_REGISTRY-}bankapi
    environment:
        - "MQHostName=Bank.RabbitMQ"
        - "MQUserName=user"
        - "MQPassword=password"
        - "DefaultConnection=Server=sqlserver2;Database=BankDB;User Id=sa;Password=Password2@"
        - "BankIdentityConnectionString=Server=sqlserver2;Database=BankIdentityDb;User Id=sa;Password=Password2@"
    networks:
      - app-tier
    build:
      context: .
      dockerfile: src/Bank.Api/Dockerfile
    restart: on-failure
    depends_on:
      - sqlserver2
      - rabbitmq

  sqlserver2:
    container_name: Bank.SQLServer
    image: mcr.microsoft.com/mssql/server:2019-latest
    hostname: 'sqlserver2'
    environment:
      ACCEPT_EULA: 'Y'
      SA_PASSWORD: "Password2@"
    volumes:
      - sql_data:/var/opt/mssql
      - ./scripts:/scripts/
    command:
      - /bin/bash
      - -c 
      - |
        # Launch MSSQL and send to background
        /opt/mssql/bin/sqlservr &
        # Wait 30 seconds for it to be available
        sleep 30
        # Run every script in /scripts
        for foo in /scripts/*.sql
          do /opt/mssql-tools/bin/sqlcmd -U sa -P Password2@ -l 30 -e -i $$foo
        done
        # So that the container doesn't shut down, sleep this thread
        sleep infinity
    networks:
      - app-tier
    ports:
      - '11403:1433'    
    expose:
      - 1433

volumes:
    sql_data:
    rabbitmq_data:
